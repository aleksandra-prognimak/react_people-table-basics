{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","App.tsx","pages/HomePage/HomePage.tsx","pages/PageNotFound/PageNotFound.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","NavBar","role","App","HomePage","PageNotFound","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","parent","slug","sex","name","PeopleTable","people","useParams","findParent","peopleList","find","map","born","died","motherName","fatherName","PeoplePage","useState","setPeople","error","setError","isLoading","setIsLoading","useEffect","peopleFromServer","catch","finally","length","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.a0c25539.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person | null;\n  parent?: string\n};\n\nexport const PersonLink: FC<Props> = ({ person, parent }) => {\n  return (\n    <>\n      {\n        person\n          ? (\n            <Link\n              to={`../${person.slug}`}\n              className={classNames(\n                { 'has-text-danger': person.sex === 'f' },\n              )}\n            >\n              {person.name}\n            </Link>\n          )\n          : (\n            <>\n              {parent}\n            </>\n          )\n      }\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { slug = '' } = useParams();\n  const findParent = (peopleList: Person[], name: string) => (\n    peopleList.find(person => person.name === name) || null\n  );\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          people.map(person => (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={classNames(\n                { 'has-background-warning': person.slug === slug },\n              )}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {\n                  person.motherName\n                    ? (\n                      <PersonLink\n                        person={\n                          findParent([...people], person.motherName)\n                        }\n                        parent={person.motherName}\n                      />\n                    )\n                    : '-'\n                }\n              </td>\n              <td>\n                {\n                  person.fatherName\n                    ? (\n                      <PersonLink\n                        person={\n                          findParent([...people], person.fatherName)\n                        }\n                        parent={person.fatherName}\n                      />\n                    )\n                    : '-'\n                }\n              </td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((peopleFromServer) => setPeople(peopleFromServer))\n      .catch(() => setError('Something went wrong'))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {\n            isLoading\n              ? <Loader />\n              : error && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  {error}\n                </p>\n              )\n          }\n\n          {\n            !isLoading && !people.length && !error && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )\n          }\n\n          {\n            !isLoading && !!people.length && !error && (\n              <PeopleTable people={people} />\n            )\n          }\n        </div>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PageNotFound } from './pages/PageNotFound';\nimport { PeoplePage } from './pages/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}